2. Add Two Numbers -- Medium

You are given two non-empty linked lists representing two non-negative integers. 
The digits are stored in reverse order and each of their nodes contain a single digit. 
Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example:

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.


=============== Better Solution =======================
class Solution(object):
    def twoSum(self, nums, target):
        """ 
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        ans = list()
        for i in range(len(nums)):
            sec_num = target - nums[i]
            for j in range(i+1,len(nums)):
                if nums[j] == sec_num:
                    ans.append(i)
                    ans.append(j)
                    return ans
